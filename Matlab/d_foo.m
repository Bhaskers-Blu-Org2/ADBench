% Generated by ADiMat 0.6.0-4975
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2015 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=y
%  - independents=r
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: d_foo
%

function [d_y y] = d_foo(d_r, r, X)
   d_tmpca2 = adimat_opdiff_epow_right(d_r, r, 2);
   tmpca2 = r .^ 2;
   d_tmpca1 = adimat_diff_sum1(d_tmpca2, tmpca2);
   tmpca1 = sum(tmpca2);
   [d_theta theta] = adimat_diff_sqrt(d_tmpca1, tmpca1);
   d_w = adimat_opdiff_div(d_r, r, d_theta, theta);
   w = r / theta;
   d_tmpca3 = adimat_opdiff_mult_right(adimat_opdiff_trans(d_w, w), w', X);
   tmpca3 = w' * X;
   [d_tmpca2 tmpca2] = adimat_diff_cos(d_theta, theta);
   d_tmpca1 = adimat_opdiff_sum(-d_tmpca2, d_zeros(1));
   tmpca1 = 1 - tmpca2;
   d_tmp = adimat_opdiff_mult(d_tmpca1, tmpca1, d_tmpca3, tmpca3);
   tmp = tmpca1 * tmpca3;
   d_tmpca9 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{2}})), w(2), X(1));
   tmpca9 = w(2) * X(1);
   d_tmpca8 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{1}})), w(1), X(2));
   tmpca8 = w(1) * X(2);
   d_tmpca7 = adimat_opdiff_sum(d_tmpca8, -d_tmpca9);
   tmpca7 = tmpca8 - tmpca9;
   d_tmpca6 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{1}})), w(1), X(3));
   tmpca6 = w(1) * X(3);
   d_tmpca5 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{3}})), w(3), X(1));
   tmpca5 = w(3) * X(1);
   d_tmpca4 = adimat_opdiff_sum(d_tmpca5, -d_tmpca6);
   tmpca4 = tmpca5 - tmpca6;
   d_tmpca3 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{3}})), w(3), X(2));
   tmpca3 = w(3) * X(2);
   d_tmpca2 = adimat_opdiff_mult_right(adimat_opdiff_subsref(d_w, struct('type', '()', 'subs', {{2}})), w(2), X(3));
   tmpca2 = w(2) * X(3);
   d_tmpca1 = adimat_opdiff_sum(d_tmpca2, -d_tmpca3);
   tmpca1 = tmpca2 - tmpca3;
   d_w_cross_X = adimat_fdiff_cat(2, adimat_fdiff_cat(3, d_tmpca1), adimat_fdiff_cat(3), adimat_fdiff_cat(3, d_tmpca4), adimat_fdiff_cat(3), adimat_fdiff_cat(3, d_tmpca7));
   w_cross_X = [tmpca1
         
         tmpca4
         
         tmpca7];
   d_tmpca5 = adimat_opdiff_mult(d_tmp, tmp, d_w, w);
   tmpca5 = tmp * w;
   [d_tmpca4 tmpca4] = adimat_diff_sin(d_theta, theta);
   d_tmpca3 = adimat_opdiff_mult(d_w_cross_X, w_cross_X, d_tmpca4, tmpca4);
   tmpca3 = w_cross_X * tmpca4;
   [d_tmpca2 tmpca2] = adimat_diff_cos(d_theta, theta);
   d_tmpca1 = adimat_opdiff_mult_right(d_tmpca2, tmpca2, X);
   tmpca1 = tmpca2 * X;
   d_y = adimat_opdiff_sum(d_tmpca1, d_tmpca3, d_tmpca5);
   y = tmpca1 + tmpca3 + tmpca5;
end

/*        Generated by TAPENADE     (INRIA, Tropics team)
    Tapenade 3.10 (r5498) - 20 Jan 2015 09:48
*/
#include "../defs.h"
/*  Hint: NBDirsMax should be the maximum number of differentiation directions
*/
// maximum number of input variables (for dv mode)
//#include "adStack.h"
// This throws error on n<1
double arr_max(int n, double *x);
void arr_max_dv(int n, double *x, double (*xd)[NBDirsMax], double *arr_max, 
    double arr_maxd[NBDirsMax], int nbdirs);
double logsumexp(int n, double *x);
void logsumexp_dv(int n, double *x, double (*xd)[NBDirsMax], double *logsumexp
    , double logsumexpd[NBDirsMax], int nbdirs);
// p dim
// k number of components
// wishart parameters
// icf  (p*(p+1)/2)*k parametrizing lower triangular 
//					square roots of inverse covariances log of diagonal 
//					is first p params
double log_wishart_prior(int p, int k, Wishart wishart, double *icf);
void log_wishart_prior_dv(int p, int k, Wishart wishart, double *icf, double (
    *icfd)[NBDirsMax], double *log_wishart_prior, double log_wishart_priord[
    NBDirsMax], int nbdirs);
double log_gamma_distrib(double a, double p);
// d dim
// k number of gaussians
// n number of points
// alphas k logs of mixture weights (unnormalized), so
//			weights = exp(log_alphas) / sum(exp(log_alphas))
// means d*k component means
// icf (d*(d+1)/2)*k parametrizing lower triangular 
//					square roots of inverse covariances log of diagonal 
//					is first d params
// wishart wishart distribution parameters
// x d*n points
// err 1 output
// To generate params in MATLAB given covariance C :
//           L = inv(chol(C, 'lower'));
//           inv_cov_factor = [log(diag(L)); L(au_tril_indices(d, -1))]
void gmm_objective(int d, int k, int n, double *alphas, double *means, double 
    *icf, double *x, Wishart wishart, double *err);
void gmm_objective_dv(int d, int k, int n, double *alphas, double (*alphasd)[
    NBDirsMax], double *means, double (*meansd)[NBDirsMax], double *icf, 
    double (*icfd)[NBDirsMax], double *x, Wishart wishart, double *err, double
    (*errd)[NBDirsMax], int nbdirs);
